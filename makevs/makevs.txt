2019 August 29 update

NOTE: *.vcxproj and *.sln files are NOT in repo
      *.vcxproj.template and *.sln.template are IN repo

      after a clone (or bad changes) copy the X.template to be X

      templates.ijs has utils for working with templates
      e.g., run template_status'' after a clone

cleanup of j.dll/jconsole/tsdll.dll vcxproj files

VS2013 current directory is the path to the sln file that is opened
vcxproj finds source files with ..\..\jsrc (that is, relative path to sln)

debug cleaned up
previously depended on jconsole.exe and special profile.ijs file in jout folders
project>configuration properties>debugging>command
 now runs jbld\j64\bin\jconsole (or j32)
project>configuration properties>debugging>command arguments
 has -lib to load debug j.dll and get standare bld profile.ijs

strong assumption that c:\users\name\jbld is folder for building/running things

bat files in a folder in path can simplify running J:
j32.bat    - jbld\j32\bin\jconsole -js "load'git/jsource/test/tsu.ijs'"
j64.bat    - jbld\j64\bin\jconsole -js "[load'git/jsource/test/tsu.ijs'"
j64avx2.bat - jbld\j64\bin\jconsole -lib javx2.dll -js "load'git/jsource/test/tsu.ijs'"

VS2013
 Open Project
 browse to git\jsource\makevs\jdll
 open jdll.sln
 Build>Configuration Manager
  Release64avx2 - X64 (32 bit builds must be Win32)
 Build Clean Solution
 Build Solution

*************************************************************************

how to build/test/debug windows binaries
**************************************************************************
general:

1. Visual Studio Express 2013 for Windows Desktop
you are urged to use vs2013 (doesn't have to be express) if possible
vs2012 is ok, but vs2015 has problems and is best avoided for now

vs make info (which source files, etc.) and vsxxxx specific info
is mixed together in *.sln and *.vcxproj files
developers pushing different vsxxxx versions to the repo would be bad
these files are in .gitignore and are not pushed to the repo
if you don't use vs2013 you need to make appropriate project property 
changes and track them on your own as they will not be in the repo

vs2013 project properties platform toolset is set for: 
 Visual Studio 2013 - Windows XP (v120_xp)
this is the main (perhaps only) property you'll have to set for vs1012

in theory the _xp platform toolset binaries run on xp (but not tested)
xp support will be dropped in the next year or so

2. examples use powershell, but command prompt works as well

3. examples and bars assume git\jsource is the jsource folder

4. jbld hardwired as build folder

5. create jbld folder
...> git\jsource\makevs\install.bat

you can copy any later gitdev jlibrary changes to jbld with
...> git\jsource\makevs\copy_jlibrary.bat

6. create .sln and .vcxproj files from templates
...> git\jsource\makevs\template.bat git

7. edit jsrc\jversion.h as appropriate for 9!:14 result
jsrc\jversion-x.h is template for this file

8. VS output files go in jbld jout folder

9. VS post build step copies new release binary to jbld


**************************************************************************
j64 

1. build jconsole.exe
start VS
open project git\jsource\makevs\jconsole\jconsole.sln

build|configuration manager - release64 x64 (configuration - platform)
build|clean solution
build|build solution

2. build j.dll
same as for jconsole but with project jdll\jdll.sln
 
3. build tsdll.dll -  used in test suite to validate cd 
same as for jconsole but with project tsdll\tsdll.sln

4. run test suite
start powershell
...>jbld\j64\bin\jconsole.exe
   i.5
   9!:14''
...
   testpath=:'git/jsource/test/'
   load testpath,'tsu.ijs'
   RUN ddall NB. takes a few minutes to validate system and report problems

**************************************************************************
debug j64 j.dll

1. build debug j.dll
start vs
open project jdll\jdll.sln
build|configuration manager
   debug64 x64 (configuration and platform)
build|clean solution
build|build solution

2. debug
start vs
open project jdll\jdll.sln
build|configuration manager
   debug64 x64 (configuration and platform)

first time - put command to start jconsole in the vsxproj.user file:
 debug|properties|config properties|debugging|command: $(outdir)\jconsole.exe

debug|start debugging (check do not show this dialog again)
jconsole starts under debugger
   i.5
...
   9!:14''
...   
open io.c in vs
set stop on 1st line of jtinpl(...) (click in margin at left of line)
   i.5
debug|continue
remove stop in jtinpl
bare j without profile
   0!:0<'profile.ijs'
   exit''


**************************************************************************
j32

1. same steps as for j64 except for obvious changes of j64 to j32
build|configuration manager - release32 win32 (configuration - platform)
